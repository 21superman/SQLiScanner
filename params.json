{
  "name": "Sqliscanner",
  "tagline": "Automatic SQL injection with Charles and sqlmapapi",
  "body": "# SQLiScanner\r\n\r\n[![GitHub issues](https://img.shields.io/github/issues/0xbug/SQLiScanner.svg)](https://github.com/0xbug/SQLiScanner/issues)\r\n[![GitHub forks](https://img.shields.io/github/forks/0xbug/SQLiScanner.svg)](https://github.com/0xbug/SQLiScanner/network)\r\n[![GitHub stars](https://img.shields.io/github/stars/0xbug/SQLiScanner.svg)](https://github.com/0xbug/SQLiScanner/stargazers)\r\n[![Python 3.x](https://img.shields.io/badge/python-3.x-yellow.svg)](https://www.python.org/) \r\n[![GitHub license](https://img.shields.io/badge/license-GPLv3-blue.svg)](https://raw.githubusercontent.com/0xbug/SQLiScanner/master/LICENSE)\r\n\r\n> Automatic SQL injection with Charles and sqlmapapi\r\n\r\n中文版说明文档[点这里](https://github.com/0xbug/SQLiScanner/blob/master/README_zh.md)\r\n\r\n## Introduction\r\n\r\n> Automatic SQL injection with Charles and sqlmapapi\r\n\r\n## Dependencies\r\n\r\n- Django\r\n- PostgreSQL\r\n- Celery\r\n- sqlmap\r\n- redis\r\n\r\n## Supported platforms\r\n\r\n- Linux\r\n- osx\r\n\r\n## Screenshots\r\n![](http://obfxuk8r6.bkt.clouddn.com/sqliscanner-upload.png)\r\n![](http://obfxuk8r6.bkt.clouddn.com/sqliscanner-stat.png)\r\n![](http://obfxuk8r6.bkt.clouddn.com/sqliscanner-allresults.png)\r\n![](http://obfxuk8r6.bkt.clouddn.com/sqliscanner-detail.png)\r\n![](http://obfxuk8r6.bkt.clouddn.com/sqliscanner-vulns.png)\r\n\r\n## Installation\r\nPreferably, you can download SQLiScanner by cloning the Git repository:\r\n```\r\ngit clone https://github.com/0xbug/SQLiScanner.git --depth 1\r\n```\r\n\r\nYou can download sqlmap by cloning the Git repository:\r\n```\r\ngit clone https://github.com/sqlmapproject/sqlmap.git --depth 1\r\n```\r\n\r\nSQLiScanner works with Python version 3.x on Linux and osx.\r\n\r\nCreate virtualenv and install requirements\r\n```\r\ncd SQLiScanner/\r\nvirtualenv --python=/usr/local/bin/python3.5 venv\r\nsource venv/bin/activate\r\npip install -r requirements.txt\r\n```\r\n\r\n## Setting\r\n\r\nDATABASES Setting\r\n```\r\nSQLiScanner/settings.py:85\r\n```\r\n\r\n```\r\nDATABASES = {\r\n    'default': {\r\n        'ENGINE': 'django.db.backends.postgresql',\r\n        'NAME': '',\r\n        'USER': '',\r\n        'PASSWORD': '',\r\n        'HOST': '127.0.0.1',\r\n        'PORT': '5432',\r\n    }\r\n}\r\n```\r\n\r\nSendEmail Setting\r\n```\r\nSQLiScanner/settings.py:158\r\n```\r\n```\r\n# Email\r\n\r\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\r\nEMAIL_USE_TLS = False\r\nEMAIL_HOST = ''\r\nEMAIL_PORT = 25\r\nEMAIL_HOST_USER = ''\r\nEMAIL_HOST_PASSWORD = ''\r\nDEFAULT_FROM_EMAIL = ''\r\n```\r\n\r\n\r\n```\r\nscanner/tasks.py:14\r\n```\r\n\r\n```\r\nclass SqlScanTask(object):\r\n    def __init__(self, sqli_obj):\r\n        self.api_url = \"http://127.0.0.1:8775\"\r\n        self.mail_from = \"\"\r\n        self.mail_to = [\"\"]\r\n\r\n```\r\n\r\n## Syncdb\r\n```\r\npython manage.py makemigrations scanner\r\npython manage.py migrate\r\n```\r\n\r\n## Create superuser\r\n\r\n```\r\npython manage.py createsuperuser\r\n```\r\n\r\n## Run\r\n\r\n```\r\nredis-server\r\npython sqlmapapi.py -s -p 8775\r\npython manage.py celery worker --loglevel=info\r\npython manage.py runserver\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}